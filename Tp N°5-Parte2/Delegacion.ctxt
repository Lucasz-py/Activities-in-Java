#BlueJ class context
comment0.target=Delegacion
comment0.text=\r\n\ Class\ Delegacion.\r\n\ Representa\ un\ grupo\ de\ visitantes,\ compuesto\ por\ varios\ objetos\ Individuo.\r\n\ Extiende\ la\ clase\ abstracta\ Visitante\ y\ aplica\ un\ descuento\ a\ la\ entrada\ total\ del\ grupo.\r\n\r\n\ @author\ (Escobar\ Luacas\ &\ Fernandez\ Gabriel)\r\n\ @version\ (19/10/2025)\r\n
comment1.params=p_nombre\ p_fecha\ p_integrantes
comment1.target=Delegacion(java.lang.String,\ java.util.Calendar,\ java.util.ArrayList)
comment1.text=\r\n\ Constructor\ de\ la\ clase\ Delegacion.\r\n\ @param\ p_nombre\ Nombre\ de\ la\ delegaci\u00F3n\ (heredado\ de\ Visitante).\r\n\ @param\ p_fecha\ Fecha\ de\ la\ visita\ (Calendar,\ heredado\ de\ Visitante).\r\n\ @param\ p_integrantes\ Lista\ inicial\ de\ individuos\ que\ componen\ la\ delegaci\u00F3n\ (ArrayList\ de\ Individuo).\r\n
comment10.params=
comment10.target=java.lang.String\ tipoVisitante()
comment10.text=\r\n\ Implementa\ el\ m\u00E9todo\ abstracto\ de\ Visitante.\r\n\ Devuelve\ el\ tipo\ de\ visitante\ como\ "Delegacion".\r\n\ @return\ El\ tipo\ de\ visitante\ (String).\r\n
comment11.params=p_fecha\ p_visitante
comment11.target=void\ listarPorFecha(java.util.Calendar,\ java.lang.String)
comment11.text=\r\n\ Implementa\ el\ m\u00E9todo\ abstracto\ de\ Visitante.\r\n\ Muestra\ la\ informaci\u00F3n\ de\ la\ Delegaci\u00F3n\ si\ coincide\ con\ la\ fecha\ y\ el\ tipo\ de\ visitante\ especificados.\r\n\ @param\ p_fecha\ Fecha\ a\ comparar\ (Calendar).\r\n\ @param\ p_visitante\ Tipo\ de\ visitante\ a\ listar\ (String).\r\n
comment2.params=p_integrantes
comment2.target=void\ setIntegrantes(java.util.ArrayList)
comment2.text=\r\n\ Establece\ la\ lista\ de\ integrantes\ de\ la\ delegaci\u00F3n.\r\n\ @param\ p_integrantes\ La\ nueva\ lista\ de\ integrantes\ (ArrayList\ de\ Individuo).\r\n
comment3.params=
comment3.target=java.util.ArrayList\ getIntegrantes()
comment3.text=\r\n\ Devuelve\ la\ lista\ de\ integrantes\ de\ la\ delegaci\u00F3n.\r\n\ @return\ La\ lista\ de\ integrantes\ (ArrayList\ de\ Individuo).\r\n
comment4.params=p_individuo
comment4.target=boolean\ inscribirIndividuo(Individuo)
comment4.text=\r\n\ Intenta\ inscribir\ un\ nuevo\ Individuo\ a\ la\ delegaci\u00F3n.\r\n\ El\ individuo\ solo\ se\ agrega\ si\ no\ existe\ ya\ un\ integrante\ con\ el\ mismo\ DNI.\r\n\ @param\ p_individuo\ El\ individuo\ a\ inscribir\ (Individuo).\r\n\ @return\ true\ si\ el\ individuo\ fue\ agregado,\ false\ si\ ya\ estaba\ inscrito.\r\n
comment5.params=p_individuo
comment5.target=boolean\ quitarIndividuo(Individuo)
comment5.text=\r\n\ Intenta\ quitar\ un\ Individuo\ de\ la\ delegaci\u00F3n.\r\n\ @param\ p_individuo\ El\ individuo\ a\ quitar\ (Individuo).\r\n\ @return\ true\ si\ el\ individuo\ fue\ quitado,\ false\ en\ caso\ contrario.\r\n
comment6.params=
comment6.target=int\ cantidadIntegrantes()
comment6.text=\r\n\ Devuelve\ la\ cantidad\ total\ de\ integrantes\ en\ la\ delegaci\u00F3n.\r\n\ @return\ El\ n\u00FAmero\ de\ integrantes\ (int).\r\n
comment7.params=
comment7.target=void\ mostrar()
comment7.text=\r\n\ Implementa\ el\ m\u00E9todo\ abstracto\ de\ Visitante.\r\n\ Muestra\ la\ informaci\u00F3n\ de\ la\ delegaci\u00F3n,\ incluyendo\ su\ nombre\ y\ el\ detalle\ de\ cada\ uno\ de\ sus\ integrantes.\r\n
comment8.params=
comment8.target=double\ entrada()
comment8.text=\r\n\ Implementa\ el\ m\u00E9todo\ abstracto\ de\ Visitante.\r\n\ Calcula\ el\ costo\ total\ de\ la\ entrada\ sumando\ la\ entrada\ individual\ de\ cada\ integrante\r\n\ y\ aplicando\ un\ descuento\ del\ 10%\ (multiplicando\ por\ 0.9).\r\n\ @return\ El\ costo\ total\ de\ la\ entrada\ con\ descuento\ (double).\r\n
comment9.params=
comment9.target=java.util.HashSet\ listarPersonas()
comment9.text=\r\n\ Implementa\ el\ m\u00E9todo\ abstracto\ de\ Visitante.\r\n\ Recolecta\ todos\ los\ objetos\ Persona\ de\ todos\ los\ Individuos\ de\ la\ delegaci\u00F3n\ en\ un\ conjunto\ (HashSet).\r\n\ @return\ Un\ conjunto\ (HashSet)\ de\ objetos\ Persona.\r\n
numComments=12
